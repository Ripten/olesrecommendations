{"version":3,"sources":["components/questionnaire/Start.js","components/questionnaire/LanguagePreference.js","components/questionnaire/ColorPreference.js","components/questionnaire/LiveActionPreference.js","components/questionnaire/GenrePreference.js","images/star.png","data/favoriteFilms.js","data/otherFilms.js","components/common/common.jsx","components/recommendations/Recommendation.js","components/recommendations/RecommendationModal.js","components/recommendations/Modal.js","components/recommendations/Recommendations.js","components/questionnaire/Questionnaire.js","images/Kon.png","components/App.js","index.js"],"names":["Start","className","onClick","this","props","showLanguageQuestion","Component","LanguagePreference","yes","document","getElementById","no","only","ReactDOM","findDOMNode","style","setTimeout","setNoLanguagePreference","bind","setEnglishOnly","foreignOnly","setForeignOnly","id","ColorPreference","setNoColorPreference","setColorsOnly","blackAndWhiteOnly","setBlackAndWhiteOnly","LiveActionPreference","setNoStylePreference","setLiveActionOnly","animationOnly","setAnimationOnly","GenrePreference","toggle","preference","button","current","state","setState","addAllTags","tags","action","push","adventure","biography","classic","comedy","crime","dark","deep","documentary","gangster","horror","kidfriendly","music","romance","sad","samurai","scifi","sports","thriller","unique","violent","war","western","zombie","createFilmRecommendations","no_preference","favoriteFilms","otherFilms","getRecommendations","request","films","concat","sort","a","b","title","englishOnly","filter","isEnglish","isForeign","colorsOnly","isColorFilm","isBlackAndWhiteFilm","liveActionOnly","isLiveAction","isAnimation","length","film","filmTags","requestTags","some","tag","includes","language","getImdbId","imdbLink","String","slice","replace","getImdbScore","ratings","score","forEach","rating","Source","Value","substring","getDirectorOrWriter","metadata","Director","Writer","createTag","key","formatted","charAt","toLowerCase","Recommendation","fetchRecommendations","fetchRecommendationsAsync","isFetching","data","filmData","href","target","rel","src","Poster","alt","Ratings","Runtime","map","imdbId","options","method","url","headers","transformRequest","axios","response","console","log","RecommendationModal","Modal","handleClose","show","showHideClassName","recommendation","Recommendations","showModal","newData","hideModal","align","element","star","year","recommendations","filmRequest","Questionnaire","languageQuestion","startPage","colorQuestion","liveActionQuestion","genreQuestion","showRecommendations","showColorQuestion","showLiveActionQuestion","showGenreQuestion","setTags","newTags","createFilmRequest","App","reload","window","location","kon","render","StrictMode"],"mappings":"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","file":"static/js/main.9d57aed2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../../styles/Questionnaire.css';\n\nclass Start extends Component {\n    render() {\n      return (\n        <div className=\"questionnaire-content\">\n            <div className=\"start-div\">\n                <p className=\"intro\">Get film recommendations based on your current mood!</p>\n                <button className=\"start-button\" onClick={this.props.showLanguageQuestion}>START</button>\n                <div className=\"faq-div\">\n                    <p className=\"faq-header\">FAQ</p>\n                    <p className=\"faq-point\">How does it work?</p>\n                    <p className=\"faq-description\">\n                        You simply answer 4 quick questions. In the last question I recommend that you pick 1 or 2 genres. \n                        If you pick 0 then you will probably get a lot of recommendations, which kind of defeats the purpose. The \n                        same applies if you pick more than 3 genres. <br/>Example:<br/> if you pick 'Action', then you will <i>only</i> get  \n                        action films. If you pick 'Action' and 'Horror', then you will get both action <i>and</i> horror films.\n                    </p>\n                    <p className=\"faq-point\">Where is the 'drama' genre?</p>\n                    <p className=\"faq-description\">\n                        A very large number of my recommendations fit the drama genre. I've omitted this particular genre in order to get \n                        a more precise filter that doesn't return half my library every time.\n                    </p>\n                    <p className=\"faq-point\">What is the 'dark' genre?</p>\n                    <p className=\"faq-description\">\n                        Pretty much what the name suggests. Films with this genre are quite dark and should definitely be \n                        avoided if you're on a date or having a family movie night!\n                    </p>\n                    <p className=\"faq-point\">What is the 'deep' genre?</p>\n                    <p className=\"faq-description\">\n                        Films that have a lot of depth, basically. They can be quite abstract and are definitely not everyone's cup of tea. \n                        Bergman's <i>Persona</i> is a good example. Avoid this genre if you want something that's easy to follow.\n                    </p>\n                    <p className=\"faq-point\">What is the 'unique' genre?</p>\n                    <p className=\"faq-description\">\n                        Films that are a bit different. The typical viewer might find these films to be quite odd. There's definitely an  \n                        overlap between this genre and the 'deep' genre.\n                    </p>\n                    <p className=\"faq-point\">Why does the result sometimes look different?</p>\n                    <p className=\"faq-description\">\n                        If you get more than 30 recommendations, then you will get a compressed list view instead of big, beautiful blocks. \n                        In this scenario, simply click on the film rows if you want more metadata.\n                    </p>\n                    <p className=\"faq-point\">What happens if I click on the actual film posters?</p>\n                    <p className=\"faq-description\">\n                        A new tab with the IMDb page of the film will open.\n                    </p>\n                    <p className=\"faq-point\">What are the film recommendations based on?</p>\n                    <p className=\"faq-description\">\n                        Simply put: my <i>personal</i> film tastes. Before adding a film to the library, it's a requirement that I personally enjoy it \n                        and would recommend it to others according to their mood.\n                    </p>\n                    <p className=\"faq-point\">What are my biases?</p>\n                    <p className=\"faq-description\">\n                        I'm biased towards East-Asian cinema and animation. A significant number of my recommendations will fit one or both of these \n                        descriptions. Luckily you can easily filter out both if you don't like such films!\n                    </p>\n                    <p className=\"faq-point\">How big is the library?</p>\n                    <p className=\"faq-description\">\n                        The library currently consists of 79 films.\n                    </p>\n                    <p className=\"faq-point\">How can I view the whole library?</p>\n                    <p className=\"faq-description\">\n                        Simply answer 'Yes' to the first 3 questions and click on 'Get recommendations!' on the 4th question, without picking any genres.\n                    </p>\n                </div>\n            </div>\n        </div>\n      );\n    }\n}\n\nexport default Start;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../../styles/Questionnaire.css';\n\nclass LanguagePreference extends Component {\n\n  yes = () => {\n    let yes = document.getElementById('all-languages');\n    let no = document.getElementById('english-only');\n    let only = document.getElementById('foreign-only');\n    ReactDOM.findDOMNode(yes).style['background-color'] = \"silver\";\n    ReactDOM.findDOMNode(no).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(only).style['opacity'] = 0.3;\n\n    setTimeout(\n      function() {\n        this.props.setNoLanguagePreference();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  no = () => {\n    let yes = document.getElementById('all-languages');\n    let no = document.getElementById('english-only');\n    let only = document.getElementById('foreign-only');\n    ReactDOM.findDOMNode(yes).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(no).style['background-color'] = \"silver\";\n    ReactDOM.findDOMNode(only).style['opacity'] = 0.3;\n\n    setTimeout(\n      function() {\n        this.props.setEnglishOnly();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  foreignOnly = () => {\n    let yes = document.getElementById('all-languages');\n    let no = document.getElementById('english-only');\n    let only = document.getElementById('foreign-only');\n    ReactDOM.findDOMNode(yes).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(no).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(only).style['background-color'] = \"silver\";\n\n    setTimeout(\n      function() {\n        this.props.setForeignOnly();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"questionnaire-content\">\n        <div className=\"question-div\">\n          Are you OK with foreign language films?\n        </div>\n        <div id=\"all-languages\" className=\"choice-div\" onClick={this.yes}>\n          Yes\n        </div>\n        <div id=\"english-only\" className=\"choice-div\" onClick={this.no}>\n          No, only I want films in English\n        </div>\n        <div id=\"foreign-only\" className=\"choice-div\" onClick={this.foreignOnly}>\n          Actually, I <i>only</i> want foreign language films!\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LanguagePreference;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../../styles/Questionnaire.css';\n\nclass ColorPreference extends Component {\n\n  yes = () => {\n    let yes = document.getElementById('all-colors');\n    let no = document.getElementById('colors-only');\n    let only = document.getElementById('blackwhite-only');\n    ReactDOM.findDOMNode(yes).style['background-color'] = \"silver\";\n    ReactDOM.findDOMNode(no).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(only).style['opacity'] = 0.3;\n\n    setTimeout(\n      function() {\n        this.props.setNoColorPreference();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  no = () => {\n    let yes = document.getElementById('all-colors');\n    let no = document.getElementById('colors-only');\n    let only = document.getElementById('blackwhite-only');\n    ReactDOM.findDOMNode(yes).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(no).style['background-color'] = \"silver\";\n    ReactDOM.findDOMNode(only).style['opacity'] = 0.3;\n\n    setTimeout(\n      function() {\n        this.props.setColorsOnly();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  blackAndWhiteOnly = () => {\n    let yes = document.getElementById('all-colors');\n    let no = document.getElementById('colors-only');\n    let only = document.getElementById('blackwhite-only');\n    ReactDOM.findDOMNode(yes).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(no).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(only).style['background-color'] = \"silver\";\n\n    setTimeout(\n      function() {\n        this.props.setBlackAndWhiteOnly();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"questionnaire-content\">\n        <div className=\"question-div\">Are you OK with black and white films?</div>\n        <div id=\"all-colors\" className=\"choice-div\" onClick={this.yes}>Yes</div>\n        <div id=\"colors-only\" className=\"choice-div\" onClick={this.no}>No, I just want color films</div>\n        <div id=\"blackwhite-only\" className=\"choice-div\" onClick={this.blackAndWhiteOnly}>Actually, I <i>only</i> want black and white films!</div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPreference;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../../styles/Questionnaire.css';\n\nclass LiveActionPreference extends Component {\n\n  yes = () => {\n    let yes = document.getElementById('all-styles');\n    let no = document.getElementById('liveaction-only');\n    let only = document.getElementById('animation-only');\n    ReactDOM.findDOMNode(yes).style['background-color'] = \"silver\";\n    ReactDOM.findDOMNode(no).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(only).style['opacity'] = 0.3;\n\n    setTimeout(\n      function() {\n        this.props.setNoStylePreference();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  no = () => {\n    let yes = document.getElementById('all-styles');\n    let no = document.getElementById('liveaction-only');\n    let only = document.getElementById('animation-only');\n    ReactDOM.findDOMNode(yes).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(no).style['background-color'] = \"silver\";\n    ReactDOM.findDOMNode(only).style['opacity'] = 0.3;\n\n    setTimeout(\n      function() {\n        this.props.setLiveActionOnly();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  animationOnly = () => {\n    let yes = document.getElementById('all-styles');\n    let no = document.getElementById('liveaction-only');\n    let only = document.getElementById('animation-only');\n    ReactDOM.findDOMNode(yes).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(no).style['opacity'] = 0.3;\n    ReactDOM.findDOMNode(only).style['background-color'] = \"silver\";\n\n    setTimeout(\n      function() {\n        this.props.setAnimationOnly();\n      }\n      .bind(this),\n      200\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"questionnaire-content\">\n        <div className=\"question-div\">Are you OK with animated films?</div>\n        <div id=\"all-styles\" className=\"choice-div\" onClick={this.yes}>Yes</div>\n        <div id=\"liveaction-only\" className=\"choice-div\" onClick={this.no}>No, I just want live action films</div>\n        <div id=\"animation-only\" className=\"choice-div\" onClick={this.animationOnly}>Actually, I <i>only</i> want animated films!</div>\n      </div>\n    );\n  }\n}\n\nexport default LiveActionPreference;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../../styles/Questionnaire.css';\n\nclass GenrePreference extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      no_preference: false,\n      action: false,\n      adventure: false,\n      biography: false,\n      classic: false,\n      comedy: false,\n      crime: false,\n      deep: false,\n      dark: false,\n      documentary: false,\n      gangster: false,\n      horror: false,\n      kidfriendly: false,\n      music: false,\n      romance: false,\n      sad: false,\n      samurai: false,\n      scifi: false,\n      sports: false,\n      thriller: false,\n      unique: false,\n      violent: false,\n      war: false,\n      western: false,\n      zombie: false\n    };\n  }\n\n  toggle = (preference) => {\n    let button = document.getElementById(preference);\n    const current = this.state[preference]\n\n    if (current === true) {\n      ReactDOM.findDOMNode(button).style['background-color'] = \"#f5ebd0\";\n      ReactDOM.findDOMNode(button).style['color'] = \"black\";\n    } else {\n      ReactDOM.findDOMNode(button).style['background-color'] = \"green\";\n      ReactDOM.findDOMNode(button).style['color'] = \"white\";\n    }\n\n    this.setState({\n      [preference]: !current\n    });\n  }\n\n  addAllTags = () => {\n    const tags = []\n\n    if (this.state.action === true) { tags.push(\"ACTION\"); }\n    if (this.state.adventure === true) { tags.push(\"ADVENTURE\"); }\n    if (this.state.biography === true) { tags.push(\"BIOGRAPHY\"); }\n    if (this.state.classic === true) { tags.push(\"CLASSIC\"); }\n    if (this.state.comedy === true) { tags.push(\"COMEDY\"); }\n    if (this.state.crime === true) { tags.push(\"CRIME\"); }\n    if (this.state.dark === true) { tags.push(\"DARK\"); }\n    if (this.state.deep === true) { tags.push(\"DEEP\"); }\n    if (this.state.documentary === true) { tags.push(\"DOCUMENTARY\"); }\n    if (this.state.gangster === true) { tags.push(\"GANGSTER\"); }\n    if (this.state.horror === true) { tags.push(\"HORROR\"); }\n    if (this.state.kidfriendly === true) { tags.push(\"KID_FRIENDLY\"); }\n    if (this.state.music === true) { tags.push(\"MUSIC\"); }\n    if (this.state.romance === true) { tags.push(\"ROMANCE\"); }\n    if (this.state.sad === true) { tags.push(\"SAD\"); }\n    if (this.state.samurai === true) { tags.push(\"SAMURAI\"); }\n    if (this.state.scifi === true) { tags.push(\"SCIFI\"); }\n    if (this.state.sports === true) { tags.push(\"SPORTS\"); }\n    if (this.state.thriller === true) { tags.push(\"THRILLER\"); }\n    if (this.state.unique === true) { tags.push(\"UNIQUE\"); }\n    if (this.state.violent === true) { tags.push(\"VIOLENT\"); }\n    if (this.state.war === true) { tags.push(\"WAR\"); }\n    if (this.state.western === true) { tags.push(\"WESTERN\"); }\n    if (this.state.zombie === true) { tags.push(\"ZOMBIE\"); }\n\n    this.props.createFilmRecommendations(tags);\n  }\n\n  render() {\n    return (\n      <div className=\"questionnaire-content\">\n        <div className=\"question-div\">What are you in the mood for?</div>\n        <div className=\"recommendation-button-row\">\n          <button className=\"recommendation-button\" onClick={this.addAllTags}>Get recommendations!</button>\n        </div>\n        <div className=\"genre-row\">\n          <button className=\"genre-button\" id=\"action\" onClick={() => this.toggle('action')}>Action</button>\n          <button className=\"genre-button\" id=\"adventure\" onClick={() => this.toggle('adventure')}>Adventure</button>\n          <button className=\"genre-button\" id=\"biography\" onClick={() => this.toggle('biography')}>Biography</button>\n          <button className=\"genre-button\" id=\"classic\" onClick={() => this.toggle('classic')}>Classic</button>\n        </div>\n        <div className=\"genre-row\">\n          <button className=\"genre-button\" id=\"comedy\" onClick={() => this.toggle('comedy')}>Comedy</button>\n          <button className=\"genre-button\" id=\"crime\" onClick={() => this.toggle('crime')}>Crime</button>\n          <button className=\"genre-button\" id=\"dark\" onClick={() => this.toggle('dark')}>Dark</button>\n          <button className=\"genre-button\" id=\"deep\" onClick={() => this.toggle('deep')}>Deep</button>\n        </div>\n        <div className=\"genre-row\">\n          <button className=\"genre-button\" id=\"documentary\" onClick={() => this.toggle('documentary')}>Documentary</button>\n          <button className=\"genre-button\" id=\"gangster\" onClick={() => this.toggle('gangster')}>Gangster</button>\n          <button className=\"genre-button\" id=\"horror\" onClick={() => this.toggle('horror')}>Horror</button>\n          <button className=\"genre-button\" id=\"kidfriendly\" onClick={() => this.toggle('kidfriendly')}>Kid friendly</button>\n        </div>\n        <div className=\"genre-row\">\n          <button className=\"genre-button\" id=\"music\" onClick={() => this.toggle('music')}>Music</button>\n          <button className=\"genre-button\" id=\"romance\" onClick={() => this.toggle('romance')}>Romance</button>\n          <button className=\"genre-button\" id=\"sad\" onClick={() => this.toggle('sad')}>Sad</button>\n          <button className=\"genre-button\" id=\"samurai\" onClick={() => this.toggle('samurai')}>Samurai</button>\n        </div>\n        <div className=\"genre-row\">\n          <button className=\"genre-button\" id=\"scifi\" onClick={() => this.toggle('scifi')}>Scifi</button>\n          <button className=\"genre-button\" id=\"sports\" onClick={() => this.toggle('sports')}>Sports</button>\n          <button className=\"genre-button\" id=\"thriller\" onClick={() => this.toggle('thriller')}>Thriller</button>\n          <button className=\"genre-button\" id=\"unique\" onClick={() => this.toggle('unique')}>Unique</button>\n        </div>\n        <div className=\"genre-row\">\n          <button className=\"genre-button\" id=\"violent\" onClick={() => this.toggle('violent')}>Violent</button>\n          <button className=\"genre-button\" id=\"war\" onClick={() => this.toggle('war')}>War</button>\n          <button className=\"genre-button\" id=\"western\" onClick={() => this.toggle('western')}>Western</button>\n          <button className=\"genre-button\" id=\"zombie\" onClick={() => this.toggle('zombie')}>Zombie</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GenrePreference;","export default __webpack_public_path__ + \"static/media/star.3f026a8c.png\";","export const favoriteFilms = \n[\n    {\n      \"title\": \"127 Hours\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2010,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1542344/\",\n      \"tags\": [\"BIOGRAPHY\"]\n    },\n    {\n      \"title\": \"28 Days Later\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2002,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0289043/\",\n      \"tags\": [\"HORROR\", \"ZOMBIE\"]\n    },\n    {\n      \"title\": \"5 Centimeters Per Second\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 2007,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0983213/\",\n      \"tags\": [\"ROMANCE\", \"ANIMATION\"]\n    },\n    {\n      \"title\": \"A Dirty Carnival\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2006,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0821442/\",\n      \"tags\": [\"THRILLER\", \"CRIME\", \"VIOLENT\", \"GANGSTER\"]\n    },\n    {\n      \"title\": \"A Tale Of Two Sisters\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2003,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0365376/\",\n      \"tags\": [\"HORROR\"]\n    },\n    {\n      \"title\": \"Alien\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1979,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0078748/\",\n      \"tags\": [\"HORROR\", \"SCIFI\", \"CLASSIC\"]\n    },\n    {\n      \"title\": \"Burning\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2018,\n      \"imdbLink\": \"https://www.imdb.com/title/tt7282468/\",\n      \"tags\": [\"DEEP\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Citizen Kane\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1941,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0033467/\",\n      \"tags\": [\"BLACK_AND_WHITE\", \"CLASSIC\"]\n    },\n    {\n      \"title\": \"Coraline\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2009,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0327597/\",\n      \"tags\": [\"HORROR\", \"ANIMATION\"]\n    },\n    {\n      \"title\": \"Django Unchained\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2012,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1853728/\",\n      \"tags\": [\"WESTERN\", \"COMEDY\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"Full Metal Jacket\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1987,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0093058/\",\n      \"tags\": [\"WAR\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Get Out\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2017,\n      \"imdbLink\": \"https://www.imdb.com/title/tt5052448/\",\n      \"tags\": [\"HORROR\"]\n    },\n    {\n      \"title\": \"Grave of the Fireflies\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 1988,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0095327/\",\n      \"tags\": [\"SAD\", \"ANIMATION\", \"WAR\", \"DARK\"]\n    },\n    {\n      \"title\": \"In The Mood For Love\",\n      \"star\": true,\n      \"language\": \"Cantonese\",\n      \"year\": 2000,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0118694/\",\n      \"tags\": [\"ROMANCE\", \"DEEP\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Inglourious Basterds\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2009,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0361748/\",\n      \"tags\": [\"WAR\", \"COMEDY\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"Jiro Dreams of Sushi\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 2011,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1772925/\",\n      \"tags\": [\"DOCUMENTARY\", \"BIOGRAPHY\"]\n    },\n    {\n      \"title\": \"Joint Security Area\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2000,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0260991/\",\n      \"tags\": [\"WAR\"]\n    },\n    {\n      \"title\": \"Kikujiro\",\n      \"star\": true,\n      \"language\": \"Japanese\",\n      \"year\": 1999,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0199683/\",\n      \"tags\": [\"SAD\", \"COMEDY\"]\n    },\n    {\n      \"title\": \"Lost in Translation\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2003,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0335266/\",\n      \"tags\": [\"ROMANCE\"]\n    },\n    {\n      \"title\": \"Millennium Actress\",\n      \"star\": true,\n      \"language\": \"Japanese\",\n      \"year\": 2001,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0291350/\",\n      \"tags\": [\"DEEP\", \"ANIMATION\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Nightcrawler\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2014,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2872718/\",\n      \"tags\": [\"THRILLER\"]\n    },\n    {\n      \"title\": \"Office Space\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1999,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0151804/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"Okuribito\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 2008,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1069238/\",\n      \"tags\": [\"SAD\"]\n    },\n    {\n      \"title\": \"Oldboy\",\n      \"star\": true,\n      \"language\": \"Korean\",\n      \"year\": 2003,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0364569/\",\n      \"tags\": [\"DEEP\", \"THRILLER\", \"CRIME\", \"DARK\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"Paprika\",\n      \"star\": true,\n      \"language\": \"Japanese\",\n      \"year\": 2006,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0851578/\",\n      \"tags\": [\"DEEP\", \"ANIMATION\", \"SCIFI\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Parasite\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2019,\n      \"imdbLink\": \"https://www.imdb.com/title/tt6751668/\",\n      \"tags\": [\"DEEP\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Perfect Blue\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 1997,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0156887/\",\n      \"tags\": [\"DEEP\", \"THRILLER\", \"ANIMATION\", \"CRIME\"]\n    },\n    {\n      \"title\": \"Persona\",\n      \"star\": false,\n      \"language\": \"Swedish\",\n      \"year\": 1966,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0060827/\",\n      \"tags\": [\"DEEP\", \"BLACK_AND_WHITE\", \"CLASSIC\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Porco Rosso\",\n      \"star\": true,\n      \"language\": \"Japanese\",\n      \"year\": 1992,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0104652/\",\n      \"tags\": [\"ANIMATION\", \"KID_FRIENDLY\"]\n    },\n    {\n      \"title\": \"Princess Mononoke\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 1997,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0119698/\",\n      \"tags\": [\"ANIMATION\", \"ADVENTURE\"]\n    },\n    {\n      \"title\": \"Reservoir Dogs\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1992,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0105236/\",\n      \"tags\": [\"THRILLER\", \"CRIME\", \"GANGSTER\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"Rocky\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1976,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0075148/\",\n      \"tags\": [\"CLASSIC\", \"SPORTS\"]\n    },\n    {\n      \"title\": \"Rocky II\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1979,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0079817/\",\n      \"tags\": [\"CLASSIC\", \"SPORTS\"]\n    },\n    {\n      \"title\": \"The Babadook\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2014,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2321549/\",\n      \"tags\": [\"HORROR\"]\n    },\n    {\n      \"title\": \"Spirited Away\",\n      \"star\": true,\n      \"language\": \"Japanese\",\n      \"year\": 2001,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0245429/\",\n      \"tags\": [\"ADVENTURE\", \"ANIMATION\", \"KID_FRIENDLY\"]\n    },\n    {\n      \"title\": \"The Empire Strikes Back\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1980,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0080684/\",\n      \"tags\": [\"SCIFI\", \"CLASSIC\"]\n    },\n    {\n      \"title\": \"The Fellowship Of The Ring\",\n      \"star\": true,\n      \"language\": \"English\",\n      \"year\": 2001,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0120737/\",\n      \"tags\": [\"ADVENTURE\"]\n    },\n    {\n      \"title\": \"The Good, the Bad and the Ugly\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1966,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0060196/\",\n      \"tags\": [\"CLASSIC\", \"WESTERN\"]\n    },\n    {\n      \"title\": \"The Shawshank Redemption\",\n      \"star\": true,\n      \"language\": \"English\",\n      \"year\": 1994,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0111161/\",\n      \"tags\": [\"CRIME\"]\n    },\n    {\n      \"title\": \"The Spy Who Loved Me\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1977,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0076752/\",\n      \"tags\": [\"CLASSIC\", \"ACTION\"]\n    },\n    {\n      \"title\": \"The Thing\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1982,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0084787/\",\n      \"tags\": [\"HORROR\", \"SCIFI\", \"CLASSIC\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"The Truman Show\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1998,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0120382/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"The Wind Rises\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 2014,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2013293/\",\n      \"tags\": [\"ANIMATION\", \"SAD\", \"WAR\"]\n    },\n    {\n      \"title\": \"To Kill A Mockingbird\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1962,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0056592/\",\n      \"tags\": [\"CLASSIC\", \"BLACK_AND_WHITE\", \"CRIME\"]\n    },\n    {\n      \"title\": \"Tokyo Godfathers\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 2003,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0388473/\",\n      \"tags\": [\"ANIMATION\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Unbreakable\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2000,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0217869/\",\n      \"tags\": [\"THRILLER\"]\n    },\n    {\n      \"title\": \"Wild Strawberries\",\n      \"star\": false,\n      \"language\": \"Swedish\",\n      \"year\": 1957,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0050986/\",\n      \"tags\": [\"CLASSIC\", \"BLACK_AND_WHITE\", \"DEEP\", \"UNIQUE\"]\n    }\n]\n\nexport default favoriteFilms;","export const otherFilms =\n[\n    {\n      \"title\": \"12 Angry Men\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1957,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0050083/\",\n      \"tags\": [\"CLASSIC\", \"BLACK_AND_WHITE\", \"CRIME\"]\n    },\n    {\n      \"title\": \"Casino Royale\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2006,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0381061/\",\n      \"tags\": [\"ACTION\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"Castaway On The Moon\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2009,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1499666/\",\n      \"tags\": [\"ROMANCE\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"Children Of Men\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2006,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0206634/\",\n      \"tags\": [\"SCIFI\"]\n    },\n    {\n      \"title\": \"Coco\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2017,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2380307/\",\n      \"tags\": [\"ANIMATION\", \"SAD\", \"ADVENTURE\", \"KID_FRIENDLY\", \"MUSIC\"]\n    },\n    {\n      \"title\": \"Dunkirk\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2017,\n      \"imdbLink\": \"https://www.imdb.com/title/tt5013056/\",\n      \"tags\": [\"WAR\"]\n    },\n    {\n      \"title\": \"Edge Of Tomorrow\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2014,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1631867/\",\n      \"tags\": [\"SCIFI\", \"ACTION\"]\n    },\n    {\n      \"title\": \"Hana-bi\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 1997,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0119250/\",\n      \"tags\": [\"SAD\", \"CRIME\", \"GANGSTER\"]\n    },\n    {\n      \"title\": \"Inception\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2010,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1375666/\",\n      \"tags\": [\"SCIFI\", \"ACTION\"]\n    },\n    {\n      \"title\": \"Jagten\",\n      \"star\": false,\n      \"language\": \"Danish\",\n      \"year\": 2012,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2106476/\",\n      \"tags\": [\"SAD\", \"DARK\", \"CRIME\"]\n    },\n    {\n      \"title\": \"Låt den rätte komma in\",\n      \"star\": false,\n      \"language\": \"Swedish\",\n      \"year\": 2008,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1139797/\",\n      \"tags\": [\"HORROR\"]\n    },\n    {\n      \"title\": \"Misery\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1990,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0100157/\",\n      \"tags\": [\"THRILLER\"]\n    },\n    {\n      \"title\": \"Pulp Fiction\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1994,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0110912/\",\n      \"tags\": [\"GANGSTER\", \"THRILLER\", \"VIOLENT\"]\n    },\n    {\n      \"title\": \"Ran\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 1985,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0089881/\",\n      \"tags\": [\"CLASSIC\", \"SAMURAI\"]\n    },\n    {\n      \"title\": \"Rush Hour\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1998,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0120812/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"Rush Hour 2\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2001,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0266915/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"Step Brothers\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2008,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0838283/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"The 40 Year-Old Virgin\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2005,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0405422/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"The Hangover\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2009,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1119646/\",\n      \"tags\": [\"COMEDY\"]\n    },\n    {\n      \"title\": \"The Prince Of Egypt\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1998,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0120794/\",\n      \"tags\": [\"ANIMATION\", \"MUSIC\"]\n    },\n    {\n      \"title\": \"The Return of the King\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2003,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0167260/\",\n      \"tags\": [\"ADVENTURE\"]\n    },\n    {\n      \"title\": \"The Seventh Seal\",\n      \"star\": false,\n      \"language\": \"Swedish\",\n      \"year\": 1957,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0050976/\",\n      \"tags\": [\"CLASSIC\", \"BLACK_AND_WHITE\", \"DEEP\", \"UNIQUE\"]\n    },\n    {\n      \"title\": \"The Shining\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1980,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0081505/\",\n      \"tags\": [\"HORROR\", \"THRILLER\", \"CLASSIC\"]\n    },\n    {\n      \"title\": \"The Silence Of The Lambs\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1991,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0102926/\",\n      \"tags\": [\"CRIME\", \"THRILLER\"]\n    },\n    {\n      \"title\": \"The Two Towers\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2002,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0167261/\",\n      \"tags\": [\"ADVENTURE\"]\n    },\n    {\n      \"title\": \"Train To Busan\",\n      \"star\": false,\n      \"language\": \"Korean\",\n      \"year\": 2016,\n      \"imdbLink\": \"https://www.imdb.com/title/tt5700672/\",\n      \"tags\": [\"HORROR\", \"ZOMBIE\"]\n    },\n    {\n      \"title\": \"Yojimbo\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 1961,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0055630/\",\n      \"tags\": [\"BLACK_AND_WHITE\", \"CLASSIC\", \"SAMURAI\"]\n    },\n    {\n      \"title\": \"Vertigo\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 1958,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0052357/\",\n      \"tags\": [\"CLASSIC\", \"CRIME\", \"DEEP\", \"ROMANCE\"]\n    },\n    {\n      \"title\": \"WALL-E\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2008,\n      \"imdbLink\": \"https://www.imdb.com/title/tt0910970/\",\n      \"tags\": [\"ANIMATION\", \"SCIFI\", \"KID_FRIENDLY\"]\n    },\n    {\n      \"title\": \"Whiplash\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2014,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2582802/\",\n      \"tags\": [\"MUSIC\"]\n    },\n    {\n      \"title\": \"Wolf Children\",\n      \"star\": false,\n      \"language\": \"Japanese\",\n      \"year\": 2012,\n      \"imdbLink\": \"https://www.imdb.com/title/tt2140203/\",\n      \"tags\": [\"ANIMATION\", \"KID_FRIENDLY\", \"SAD\"]\n    },\n    {\n      \"title\": \"Zombieland\",\n      \"star\": false,\n      \"language\": \"English\",\n      \"year\": 2009,\n      \"imdbLink\": \"https://www.imdb.com/title/tt1156398/\",\n      \"tags\": [\"ZOMBIE\", \"COMEDY\"]\n    }\n]\n\nexport default otherFilms;","import React from 'react';\nimport star from '../../images/star.png';\nimport favoriteFilms from '../../data/favoriteFilms.js';\nimport otherFilms from '../../data/otherFilms.js';\nimport '../../styles/Table.css';\n\n\nexport function getTitle(element) {\n    if (element.star === true) {\n        return (\n            <td className=\"title-td\">\n                <div className=\"stars\">\n                    {element.title} <img className=\"star-icon\" src={star} alt=\"star\" />\n                </div>\n            </td>\n        )\n    }\n    else {\n        return ( <td className=\"title-td\">{element.title}</td> )\n    }\n}\n\nexport function getRecommendations(request) {\n    var films = favoriteFilms.concat(otherFilms).sort((a, b) => (a.title > b.title) ? 1 : -1);\n\n    if (request == null) return films\n\n    switch (request.englishOnly) {\n        case true:\n            films = films.filter(isEnglish);\n            break;\n        case false:\n            films = films.filter(isForeign);\n            break;\n        default:\n            break;    \n    }\n\n    switch (request.colorsOnly) {\n        case true:\n            films = films.filter(isColorFilm);\n            break;\n        case false:\n            films = films.filter(isBlackAndWhiteFilm);\n            break;\n        default:\n            break;    \n    }\n\n    switch (request.liveActionOnly) {\n        case true:\n            films = films.filter(isLiveAction);\n            break;\n        case false:\n            films = films.filter(isAnimation);\n            break;\n        default:\n            break;    \n    }\n\n    if (request.tags.length > 0) {\n        films = films.filter(film => filmContainsAtLeastOneTag(film.tags, request.tags));\n    }\n\n    return films;\n}\n\nfunction isEnglish(film) {\n    return film.language === \"English\";\n}\n\nfunction isForeign(film) {\n    return film.language !== \"English\";\n}\n\nfunction isColorFilm(film) {\n    return !film.tags.includes(\"BLACK_AND_WHITE\");\n}\n\nfunction isBlackAndWhiteFilm(film) {\n    return film.tags.includes(\"BLACK_AND_WHITE\");\n}\n\nfunction isLiveAction(film) {\n    return !film.tags.includes(\"ANIMATION\");\n}\n\nfunction isAnimation(film) {\n    return film.tags.includes(\"ANIMATION\");\n}\n\nfunction filmContainsAtLeastOneTag(filmTags, requestTags) {\n    return filmTags.some(tag => requestTags.includes(tag));\n}\n\nexport function getImdbId(imdbLink) {\n    var urlString = String(imdbLink);\n    return urlString.slice(27).replace('/', '');\n}\n\nexport function getImdbScore(ratings) {\n    var score = \"\";\n\n    if (ratings != null) {\n        ratings.forEach(rating => {\n            if (rating.Source === \"Internet Movie Database\") {\n                score = rating.Value.substring(0, 3);\n            }\n        });\n    }\n\n    return score;\n}\n\nexport function getDirectorOrWriter(metadata) {\n    if (metadata.Director !== \"N/A\") {\n        return \"Directed by \" + metadata.Director;\n    }\n    else if (metadata.Writer !== \"N/A\") {\n        return \"Written by \" + metadata.Writer;\n    }\n    else {\n        return \"\";\n    }\n}\n\nexport function createTag(tag, title) {\n    const key = title + \" - \" + tag;\n    var formatted = \"\";\n    \n    if (tag === \"BLACK_AND_WHITE\") {\n        formatted = \"BlackAndWhite\";\n    }\n    else if (tag === \"KID_FRIENDLY\") {\n        formatted = \"Kid friendly\";\n    } \n    else {\n        formatted = tag.charAt(0) + tag.substring(1).toLowerCase();\n    }\n\n    return <button className=\"tag-button\" key={key}>{formatted}</button>;\n}","import React, {Component} from 'react';\nimport '../../styles/Recommendation.css';\nimport axios from 'axios'\nimport {  getImdbId, getDirectorOrWriter, getImdbScore, createTag } from '../common/common.jsx';\n\nclass Recommendation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFetching: false,\n            data: null\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"loading-message\">{this.state.isFetching ? 'Fetching metadata...' : ''}</p>\n                {(() => { \n                    if (this.state.data !== null && this.state.isFetching === false) {\n                        const filmData = this.state.data;\n\n                        return (<div className=\"recommendation-div\">\n                                    <h1 className=\"header\">{this.props.props.title}</h1>\n                                    <div className=\"poster-div\">\n                                        <a href={this.props.props.imdbLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"poster\" src={filmData.Poster} alt=\"poster\" />\n                                        </a>\n                                    </div>\n                                    <div className=\"information-div\">\n                                        <p className=\"info\">{getDirectorOrWriter(filmData)}</p>\n                                        <p className=\"info\">IMDb Rating: {getImdbScore(filmData.Ratings)}</p>\n                                        <p className=\"info\">Language: {this.props.props.language}</p>\n                                        <p className=\"info\">Runtime: {filmData.Runtime}</p>\n                                        <p className=\"tags-header\">Tags:</p>\n                                        {this.props.props.tags.map((tag) => (\n                                            createTag(tag, this.props.props.title)\n                                        ))}\n                                    </div>\n                            </div>)\n                    }\n                })()}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchRecommendations();\n    }\n\n    async fetchRecommendationsAsync() {\n        const imdbId = getImdbId(this.props.props.imdbLink);\n\n        const options = {\n            method: 'get',\n            url: `https://www.omdbapi.com/?i=${imdbId}&apiKey=15d1860`,\n            headers: { 'Content-Type': 'application/json' },\n            transformRequest: [(data) => {\n              return data;\n            }]\n        };\n\n        try {\n            this.setState({isFetching: true});\n            const response = await axios(options);\n            this.setState({data: response.data, isFetching: false});\n        } catch (e) {\n            console.log(e);\n            this.setState({...this.state, isFetching: false});\n        }\n    };\n\n    fetchRecommendations = this.fetchRecommendationsAsync;\n\n}\n\nexport default Recommendation;","import React, {Component} from 'react';\nimport '../../styles/RecommendationModal.css';\nimport '../../styles/Recommendation.css';\nimport axios from 'axios';\nimport {  getImdbId, getDirectorOrWriter, getImdbScore, createTag } from '../common/common.jsx';\n\n\nclass RecommendationModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFetching: false,\n            data: null\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"loadingmessage\">{this.state.isFetching ? 'Fetching metadata...' : ''}</p>\n                {(() => { \n                    if (this.state.data !== null && this.state.isFetching === false) {\n                        const filmData = this.state.data;\n\n                        return (<div>\n                                    <h1 className=\"header\">{this.props.props.title}</h1>\n                                    <div className=\"poster-div\">\n                                        <a href={this.props.props.imdbLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img className=\"poster\" src={filmData.Poster} alt=\"poster\" />\n                                        </a>\n                                    </div>\n                                    <div className=\"information-div\">\n                                        <p className=\"info\">{getDirectorOrWriter(filmData)}</p>\n                                        <p className=\"info\">IMDb Rating: {getImdbScore(filmData.Ratings)}</p>\n                                        <p className=\"info\">Language: {this.props.props.language}</p>\n                                        <p className=\"info\">Runtime: {filmData.Runtime}</p>\n                                        <p className=\"tags-header\">Tags:</p>\n                                        {this.props.props.tags.map((tag) => (\n                                            createTag(tag, this.props.props.title)\n                                        ))}\n                                    </div>\n                            </div>)\n                    }\n                })()}\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchRecommendations();\n    }\n\n    async fetchRecommendationsAsync() {\n        const imdbId = getImdbId(this.props.props.imdbLink);\n\n        const options = {\n            method: 'get',\n            url: `https://www.omdbapi.com/?i=${imdbId}&apiKey=15d1860`,\n            headers: { 'Content-Type': 'application/json' },\n            transformRequest: [(data) => {\n              return data;\n            }]\n        };\n\n        try {\n            this.setState({isFetching: true});\n            const response = await axios(options);\n            this.setState({data: response.data, isFetching: false});\n        } catch (e) {\n            console.log(e);\n            this.setState({...this.state, isFetching: false});\n        }\n    };\n\n    fetchRecommendations = this.fetchRecommendationsAsync;\n}\n\nexport default RecommendationModal;","import '../../styles/RecommendationModal.css';\nimport RecommendationModal from './RecommendationModal.js';\n\nconst Modal = ({ handleClose, show, data }) => {\n  const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n  const recommendation = show ? <RecommendationModal props={data} handleClose={handleClose} /> : <div />;\n\n  return (\n    <div className={showHideClassName} onClick={handleClose}>\n      <section className='modal-main'>\n        {recommendation}\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;","import React, {Component} from 'react';\nimport '../../styles/Table.css';\nimport '../../styles/Questionnaire.css';\nimport '../../styles/RecommendationModal.css'\nimport {  getTitle, getRecommendations } from '../common/common.jsx';\nimport Recommendation from './Recommendation.js';\nimport Modal from './Modal.js'\n\n\nclass Recommendations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFetching: false,\n            show: false, \n            films: []\n        };\n    }\n\n    showModal = (newData) => {\n        this.setState({ show: true, data: newData });\n    }\n  \n    hideModal = () => {\n        this.setState({ show: false, data: '' });\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal show={this.state.show} handleClose={this.hideModal} data={this.state.data} ></Modal>\n                {(() => { \n                    if (this.state.films.length > 0 && this.state.films.length < 31)\n                        return <div>\n                            <div className=\"result\">\n                                <div>{this.state.films.length} suitable recommendation(s) found!</div>\n                                <div>Refresh the page or click on the banner to start over</div>\n                            </div>\n                            {this.state.films.map((film) => (\n                                <div key={film.title}>\n                                    <Recommendation props={film} />\n                                </div>\n                            ))}\n                        </div>\n                    else if (this.state.films.length > 30)\n                        return <div className=\"table-content\">\n                        <div className=\"result-table\">\n                                <div>{this.state.films.length} suitable recommendation(s) found!</div>\n                                <div>Refresh the page or click on the banner to start over</div>\n                        </div>\n                        <table align=\"center\">\n                            <thead>\n                                <tr>\n                                    <th>Title</th>\n                                    <th>Year</th>\n                                    <th>Language</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.films.map((film) => (\n                                <tr key={film.title} className=\"tr-clickable\" onClick={() => this.showModal(film)}>\n                                    {getTitle(film)}\n                                    <td>{film.year}</td>\n                                    <td>{film.language}</td>\n                                </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                        </div>\n                    else\n                        return <div className=\"result\">\n                                    <div>No suitable recommendations found with your filters.</div>\n                                    <div>Refresh the page or click on the banner to start over</div>\n                                </div>\n                })()}\n                <p>{this.state.isFetching ? 'Loading...' : ''}</p>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.fetchRecommendations();\n    }\n\n    async fetchRecommendationsAsync() {\n        const recommendations = getRecommendations(this.props.filmRequest);\n        this.setState({films: recommendations});\n    };\n\n    fetchRecommendations = this.fetchRecommendationsAsync;\n}\n\nexport default Recommendations;","import React, { Component } from 'react';\nimport Start from './Start.js';\nimport LanguagePreference from './LanguagePreference.js';\nimport ColorPreference from './ColorPreference.js';\nimport LiveActionPreference from './LiveActionPreference.js';\nimport GenrePreference from './GenrePreference.js';\nimport Recommendations from '../recommendations/Recommendations.js';\nimport '../../styles/Questionnaire.css';\n\n\nclass Questionnaire extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startPage: true,\n      languageQuestion: false,\n      colorQuestion: false,\n      liveActionQuestion: false,\n      genreQuestion: false,\n      showRecommendations: false,\n      englishOnly: null,\n      colorsOnly: null,\n      liveActionOnly: null,\n      filmRequest: null,\n      recommendations: null\n    };\n  }\n\n  showLanguageQuestion = () => {\n    const { languageQuestion } = this.state;\n  \n    this.setState({\n      startPage: false,\n      languageQuestion: !languageQuestion,\n      colorQuestion: false,\n      liveActionQuestion: false,\n      genreQuestion: false,\n      showRecommendations: false\n    });\n  }\n\n  showColorQuestion = () => {\n    const { colorQuestion } = this.state;\n  \n    this.setState({\n      startPage: false,\n      languageQuestion: false,\n      colorQuestion: !colorQuestion,\n      liveActionQuestion: false,\n      genreQuestion: false,\n      showRecommendations: false\n    });\n  }\n\n  showLiveActionQuestion = () => {\n    const { liveActionQuestion } = this.state;\n  \n    this.setState({\n      startPage: false,\n      languageQuestion: false,\n      colorQuestion: false,\n      liveActionQuestion: !liveActionQuestion,\n      genreQuestion: false,\n      showRecommendations: false\n    });\n  }\n\n  showGenreQuestion = () => {\n    const { genreQuestion } = this.state;\n  \n    this.setState({\n      startPage: false,\n      languageQuestion: false,\n      colorQuestion: false,\n      liveActionQuestion: false,\n      genreQuestion: !genreQuestion,\n      showRecommendations: false\n    });\n  }\n\n  showRecommendations = () => {\n    const { showRecommendations } = this.state;\n  \n    this.setState({\n      startPage: false,\n      languageQuestion: false,\n      colorQuestion: false,\n      liveActionQuestion: false,\n      genreQuestion: false,\n      showRecommendations: !showRecommendations\n    });\n  }\n\n  setEnglishOnly = () => {\n    this.setState({englishOnly: true});\n    this.showColorQuestion();\n  }\n\n  setForeignOnly = () => {\n    this.setState({englishOnly: false});\n    this.showColorQuestion();\n  }\n\n  setNoLanguagePreference = () => {\n    this.setState({englishOnly: null}); \n    this.showColorQuestion();\n  }\n\n  setColorsOnly = () => {\n    this.setState({colorsOnly: true});\n    this.showLiveActionQuestion();\n  }\n\n  setBlackAndWhiteOnly = () => {\n    this.setState({colorsOnly: false});\n    this.showLiveActionQuestion();\n  }\n  \n  setNoColorPreference= () => {\n    this.setState({colorsOnly: null});\n    this.showLiveActionQuestion();\n  }\n\n  setLiveActionOnly = () => {\n    this.setState({liveActionOnly: true});\n    this.showGenreQuestion();\n  }\n\n  setAnimationOnly = () => {\n    this.setState({liveActionOnly: false});\n    this.showGenreQuestion();\n  }\n\n  setNoStylePreference = () => {\n    this.setState({liveActionOnly: null});\n    this.showGenreQuestion();\n  }\n\n  setTags = (newTags) => {\n    this.createFilmRecommendations(newTags);\n  }\n\n  createFilmRequest = (tags) => {\n    const request = {\n      \"englishOnly\": this.state.englishOnly,\n      \"colorsOnly\": this.state.colorsOnly,\n      \"liveActionOnly\": this.state.liveActionOnly,\n      \"tags\": tags\n    }\n\n    this.setState({filmRequest: request});\n  }\n  \n  createFilmRecommendations = (tags) => {\n    this.createFilmRequest(tags);\n    this.showRecommendations();\n  }\n\n  render() {\n    return (\n      <div className=\"questionnaire-content\">\n         {(() => {\n            if (this.state.startPage)\n              return <Start showLanguageQuestion={this.showLanguageQuestion} />\n            else if (this.state.languageQuestion)\n              return <LanguagePreference \n                      setEnglishOnly={this.setEnglishOnly} \n                      setForeignOnly={this.setForeignOnly} \n                      setNoLanguagePreference={this.setNoLanguagePreference} />\n            else if (this.state.colorQuestion)\n              return <ColorPreference  \n                      setColorsOnly={this.setColorsOnly}\n                      setBlackAndWhiteOnly={this.setBlackAndWhiteOnly}\n                      setNoColorPreference={this.setNoColorPreference} />\n            else if (this.state.liveActionQuestion)\n              return <LiveActionPreference \n                      setLiveActionOnly={this.setLiveActionOnly} \n                      setAnimationOnly={this.setAnimationOnly}\n                      setNoStylePreference={this.setNoStylePreference}/>\n            else if (this.state.genreQuestion)\n              return <GenrePreference \n                      createFilmRecommendations={this.createFilmRecommendations} />       \n            else if (this.state.showRecommendations)\n              return <Recommendations {...this.state} />\n            else\n              return null\n          })()\n        }\n      </div>\n    );\n  }\n}\n\nexport default Questionnaire;","export default __webpack_public_path__ + \"static/media/Kon.19a21553.png\";","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport Questionnaire from './questionnaire/Questionnaire';\nimport kon from '../images/Kon.png'\n\n\nclass App extends Component {\n  reload = () => {\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"banner\">\n          <div className=\"banner-content\" onClick={this.reload}>\n            Ole's Recommendations\n            <img className=\"banner-image\" src={kon} alt=\"kon\" />\n          </div>\n        </div>\n        <div className=\"mainpage\">\n          <Questionnaire />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}